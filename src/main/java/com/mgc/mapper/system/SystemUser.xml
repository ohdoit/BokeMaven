<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<!-- 如果自己写mapperDao的实现类，命名空间最好与实体对应 -->
<!-- 如果使用mybatis来自动生成mapper接口的实现类，命名空间应该与mapper接口对应 -->
<mapper namespace="com.mgc.dao.system.SystemUserDao">  
  	<!-- 实体映射 -->
  	<resultMap type="com.mgc.entity.system.SystemUser" id="systemUserMap">
  		<id property="id" column="ID" />
  		<result property="account" column="ACCOUNT" />
  		<result property="password" column="PASSWORD" />
  	</resultMap>
  	<!-- 使用指定参数实例化 -->
  	<!-- <resultMap type="com.mgc.entity.system.SystemUser" id="systemUserMap">
  		<constructor>
	  		<idArg name="id" column="ID" />
	  		<arg name="account" column="ACCOUNT" />
	  		<arg name="password" column="PASSWORD" />
  		</constructor>
  	</resultMap> -->
  	
    <!-- 查询所有的数据 -->  
    <select id="getSystemUsers" resultMap="systemUserMap">  
        select * from system_user  
    </select>  
    
    <!-- 查询对应的账号和密码是否存在 -->
    <select id="getSystemUser" resultType="com.mgc.entity.system.SystemUser" parameterType="com.mgc.entity.system.SystemUser"> 
    	select * from system_user where account='${account}' and password='${password}' 
    </select>
    
    <select id="findSystemUser" resultType="com.mgc.entity.system.SystemUser" parameterType="java.lang.String">
    	select * from system_user where account=#{account} 
    </select>
      
    <!-- 插入一条数据 -->  
    <insert id="save" parameterType="com.mgc.entity.system.SystemUser">  
    	<!-- 对于允许为空的列要加上jdbcType -->
        insert into system_user(account, password) values(#{account},#{password})
        <!-- <selectKey resultType="long" keyProperty="id" order="AFTER">
        	select LAST_INSERT_ID() AS ID
        </selectKey>   -->
    </insert>   

	<!-- 批量插入：返回最后一条插入结果，不会回滚 -->
	<insert id="saveAll0" parameterType="com.mgc.entity.system.SystemUser">
		<foreach collection="list" item="item" index="index" separator=";">
			insert into system_user(account, password) values(#{item.account},#{item.password})  
		</foreach>
	</insert>
	
	<insert id="saveAll" parameterType="com.mgc.entity.system.SystemUser">
		insert into system_user(account, password) values 
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.account}, #{item.password})
		</foreach>
	</insert>
	
	<update id="update" parameterType="com.mgc.entity.system.SystemUser">
		update system_user set account=#{account},
			set password = #{password}
			where id=#{id};
	</update>
	
	<!-- <update id="updateAll" parameterType="java.util.List">
		update orders set state='0' where no in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update> -->
	
	<!-- <delete id="delete" parameterType="long">
		delete from system_user where id=#{id}
	</delete> -->
	
	<!-- <delete id="deleteAll" parameterType="java.util.List">
		delete from system_user where id in 
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete> -->
	
	<!-- sql定义可以复用的sql语句 -->
	<!-- <sql id="selectAll">
		select u.id, u.account, u.password from system_user u 
	</sql>
	<select id="getSystemUserById" parameterType="java.lang.Long">
		<include refid="selectAll" />
		where u.id = #{id} 
	</select> -->
	
	<!-- 多参数：方法参数需要添加@Param注解 getUserListByParams(@Param(value="account")String account, @Param(value="password")String password) -->
	<!-- <select id="getUserListByParams" resultMap="systemUserMap">
		select * from system_user u 
		<where>
			<if test="account!=null and account!='' ">
				u.account like concat(concat('%', #{name}), '%')
			</if>
			<if test="password!=null and password!='' ">
				and u.password=#{password}
			</if>
		</where>
	</select> -->
	
	
</mapper>  